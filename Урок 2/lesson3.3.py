# МНОЖЕСТВО set - набор
# неупорядоченные коллекции,содержащии не повторяющиеся элементы
# Во множестве не может быть 2-х одинаковых элементов
# объявляется множество фигурными скобками но в отличие от словаря
# в скобках через запятую записываем значение элементов
# cities = {'Las Vegas','Paris','Moscow'}
cities = ['Las Vegas', 'Paris', 'Moscow', 'Paris', 'Moscow']

print(type(cities))
print(cities)

# чтобы сделать не повторяющиеся нужно привести к типу set
cities = set(cities)
print(cities)
print(type(cities))
# Действия со множествами
# добавление элемента cities.add('Burma')
# удаление элемента cities.remove('Moscow')
# длина множества len
# оператор in, цикл for
# работа с несколькими множествами(объединение,пересечение,...)
cities = {'Las Vegas','Paris','Moscow'}
print(cities)
# Добавляем методом add
cities.add('Burma')
print(cities)

# чтобы удалить элемент воспользуемся методом remove
cities.remove('Moscow')
print(cities)

# к множеству можно пременить методы последовательности
print(len(cities))

# метод in проверить элемент в множестве
print('Paris' in cities)

# цикл for перебор по очереди
for city in cities:
    print(city)
# Операции со множествами
# Объединение |
# Пересечение &
# Разность -
# они работают так же как множества в математики
# семейная пара собирается в отпуск
# каждый из супругов собирает в поездку вещи
# Max взял эти вещи:
max_things = {'Телефон','Бритва','Рубашка','Шорты'}
# Kate взяла эти вещи
kate_things = {'Телефон','Шорты','Зонтик','Помада'}

# какие вещи взяли супруги вместе ?
# для этого нужно взять одно множество и объеденить со вторым
print(max_things | kate_things)
# найти вещи повторяются
print(max_things & kate_things)
# какие вещи взял max, но не взяла kate ?
print(max_things - kate_things)
# какие вещи взяла kate, но не взял max ?
print(kate_things - max_things)
